name: Build Release Candidate

on:
  push:
    branches:
      - v2-develop
jobs:
  release:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: setup semantic-release
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/exec semantic-release/git semantic-release/release-notes-generator @saithodev/semantic-release-backmerge conventional-changelog-conventionalcommits
      - name: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  build-release:
    needs: release
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.version-step.outputs.pe-version }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
        id: extract_branch

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Get release version
        id: version-step
        run: echo "pe-version=$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Print PE Version
        run: echo ${{ steps.version-step.outputs.pe-version }}

      - name: Build PE
        run: mvn package --no-transfer-progress

      - name: Upload PE jar
        uses: actions/upload-artifact@v3
        with:
          name: pe-jar
          path: target/*.jar

  docker:
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download PE jar
        uses: actions/download-artifact@v3
        with:
          name: pe-jar
          path: target/

      - name: Publish to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ddarras/test-release
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          tags: "latest,${{ needs.build-release.outputs.release-version }}"
